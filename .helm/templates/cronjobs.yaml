{{- $variables := .Values.env.open -}}
{{- $image := .Values.image.name -}}
{{- $resources := .Values.resources -}}
{{- $vault := .Values.vault -}}
{{- if .Values.cronjobs -}}
  {{- range .Values.cronjobs }}
    {{- if .name }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .name }}
spec:
  schedule: "{{ .schedule }}"
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 2
  jobTemplate:
    spec:
      template:
        spec:
          imagePullSecrets:
          - name: gitlab-registry
          {{- if $vault.enabled }}
          initContainers:
            - name: vault-client
              image: {{ $vault.image }}
              env:
              - name: VAULT_ADDRESS
                value: {{ $vault.url }}
              - name: VAULT_ROLE_ID
                valueFrom:
                  secretKeyRef:
                    name: {{ $vault.secretName }}
                    key: role-id
              - name: VAULT_SECRET_ID
                valueFrom:
                  secretKeyRef:
                    name: {{ $vault.secretName }}
                    key: secret-id
              - name: VAULT_SECRET_PATH
                value: {{ $vault.secretPath }}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                privileged: false
                procMount: Default
                runAsNonRoot: true
                runAsUser: 33
                readOnlyRootFilesystem: true
              volumeMounts:
              - mountPath: /data/secrets
                name: vault
          {{- end }}
          containers:
          - env:
            {{- range $name, $value := $variables }}
            {{- if not (empty $value) }}
            - name: {{ $name | quote }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            image: "{{ $image }}"
            resources:
{{- toYaml $resources | nindent 14 }}
{{- if $vault.enabled }}
            volumeMounts:
            - mountPath: /srv/www/app/.env
              name: vault
              readOnly: true
              subPath: .env
{{- end }}
            args:
{{ toYaml .args | indent 12 -}}
            name: event-clean
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          terminationGracePeriodSeconds: 30
    {{- if $vault.enabled }}
          volumes:
    {{- end }}
    {{- if $vault.enabled }}
          - name: vault
            emptyDir: {}
    {{- end }}
    {{- end }}
  {{- end }}
{{- end }}